# Generated by Django 4.0.1 on 2022-11-01 10:07

import autoslug.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('image', models.ImageField(blank=True, default='/media/default.png', null=True, upload_to='img/', verbose_name='Изображение')),
                ('rating', models.IntegerField(blank=True, default=0, verbose_name='Рейтинг')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Адрес электронной почты')),
                ('username', models.CharField(max_length=32, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='username')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(verbose_name='Время отправки')),
                ('points', models.PositiveIntegerField(verbose_name='Количество полученых очков')),
                ('successfully', models.BooleanField(default=False, verbose_name='Успешное решение')),
                ('error', models.CharField(max_length=30, verbose_name='Ошибка')),
            ],
        ),
        migrations.CreateModel(
            name='AttemptTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempts', models.ManyToManyField(to='main.Attempt')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='Название задания')),
                ('description', models.TextField(verbose_name='Описание задания')),
                ('input_exmaple', models.TextField(verbose_name='Пример ввода кода')),
                ('output_exmaple', models.TextField(verbose_name='Пример ввода кода')),
                ('extra_text', models.TextField(blank=True, verbose_name='Дополнительные пояснение, недочеты')),
                ('input_values', models.TextField(verbose_name='Вводимые значения')),
                ('output_values', models.TextField(verbose_name='Получаемые значения')),
                ('soft', models.BooleanField(default=False, verbose_name='Чувтствительность к пробелам')),
                ('score', models.PositiveIntegerField(help_text='Указывать половину от максимального числа', verbose_name='Количество очков за задание')),
            ],
        ),
        migrations.CreateModel(
            name='Determined',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.ManyToManyField(to='main.AttemptTask')),
                ('user', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('start_time', models.DateTimeField(verbose_name='Дата старта')),
                ('duration', models.PositiveIntegerField(verbose_name='Длительность соревнования')),
                ('title', models.CharField(max_length=30, unique=True, verbose_name='Название')),
                ('actual', models.BooleanField(default=True, verbose_name='Не закончен')),
                ('verified', models.BooleanField(default=False, verbose_name='Проверено администратором')),
                ('rating', models.BooleanField(default=False, verbose_name='Рейтинговое ли соревнование')),
                ('rating_points', models.PositiveIntegerField(default=0, verbose_name='Количество очков рейтнга')),
                ('determined_users', models.ManyToManyField(blank=True, to='main.Determined')),
                ('tasks', models.ManyToManyField(to='main.Task')),
            ],
        ),
        migrations.AddField(
            model_name='attempttask',
            name='task',
            field=models.ManyToManyField(to='main.Task'),
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500, verbose_name='О чем вы хотите рассказать?')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('image', models.FileField(upload_to='img/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
